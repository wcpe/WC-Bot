buildscript {
    ext {
        kotlin_version = "1.7.10"
        wcpelibVersion = "1.0.17"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
    id 'maven-publish'
    id 'org.jetbrains.dokka' version "${kotlin_version}"
    id "com.github.johnrengelman.shadow" version "7.1.1"
}

group 'top.wcpe'
version '3.0.0-alpha-dev-4'


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching(['plugin.yml']) {
        expand props
    }
    from('src/main/java') {
        include '**/*.xml'
    }
    from('src/main/kotlin') {
        include '**/*.xml'
    }
}

repositories {
    mavenLocal()
    maven {
        url "http://maven.wcpe.top/repository/maven-public/"
        allowInsecureProtocol = true
    }
    mavenCentral()
}


dependencies {
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly "cn.nukkit:nukkit:1.0-SNAPSHOT"
    compileOnly "top.wcpe:wcpelib-common:${wcpelibVersion}"
    compileOnly "top.wcpe:wcpelib-nukkit:${wcpelibVersion}"
    compileOnly "me.onebone:economyapi:2.0.0"
    compileOnly "moe.him188:gui:1.15.1"

    implementation "net.mamoe:mirai-core:2.12.2"

    compileOnly "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xjvm-default=all-compatibility"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xjvm-default=all-compatibility"
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId project.group
            artifactId project.name
            version project.version
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            credentials {
                allowInsecureProtocol = true
                username = project.findProperty("username").toString()
                password = project.findProperty("password").toString()
            }
            def releasesRepoUrl = "http://maven.wcpe.top/repository/maven-releases/"
            def snapshotsRepoUrl = "http://maven.wcpe.top/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}
